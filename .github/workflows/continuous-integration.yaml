name: Continuous Integration
on:
  push:
  pull_request:
  release:
    types:
      [published]
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, windows-2019, macos-10.15]
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.300'
    - run: dotnet test csharp
    - run: dotnet pack csharp/Fau --configuration Release
    - uses: shivammathur/setup-php@v2
      with:
        php-version: '7.4'
        coverage: xdebug
    - run: composer install
    - run: mkdir php/test_results
    - run: vendor/bin/phpunit --whitelist php/src --coverage-text php/tests/ | tr '\r' '\n' | tee php/test_results/unit
    - run: grep -E "^\s*Lines:\s*100.00%\s*\([0-9]+\/[0-9]+\)\s*$" php/test_results/unit
    - uses: actions/setup-node@v1
      with:
        node-version: '12.x'
        registry-url: 'https://registry.npmjs.org'
    - run: npm ci --prefix typescript
    - run: npm run-script lint --prefix typescript
    - run: npm run-script buildTypeScript --prefix typescript
    - run: npm run-script buildNyc --prefix typescript
    - uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - run: python -m pip install -r requirements.txt
      working-directory: python
    - run: python -m flake8 . --count --show-source --statistics
      working-directory: python
    - run: python -m mypy -p fau
      working-directory: python
    - run: python -m pytest --cov fau
      working-directory: python
    - run: python setup.py sdist bdist_wheel
      working-directory: python
  release:
    if: github.event_name == 'release'
    needs: build
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - run: sed -i s/999.999.999/0.0.10/ csharp/Fau/Fau.csproj typescript/package.json typescript/package-lock.json python/setup.py
    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.300'
    - run: dotnet pack csharp/Fau --configuration Release
    - run: dotnet nuget push csharp/Fau/bin/Release/*.nupkg -s https://api.nuget.org/v3/index.json -k ${{ secrets.nuget_key }}
    - uses: actions/setup-node@v1
      with:
        node-version: '12.x'
        registry-url: 'https://registry.npmjs.org'
    - run: npm ci --prefix typescript
    - run: npm run-script buildTypeScript --prefix typescript
    - run: npm publish
      working-directory: typescript
      env:
        NODE_AUTH_TOKEN: ${{secrets.npm_token}}
    - uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - run: python -m pip install -r requirements.txt
      working-directory: python
    - run: python setup.py sdist bdist_wheel
      working-directory: python
    - run: python -m twine upload dist/*
      working-directory: python
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{secrets.twine_password}}
